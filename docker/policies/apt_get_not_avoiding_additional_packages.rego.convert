package $namespace.$type.$policyid

__rego_metadata__ := {
    "id": "XYZ-1234",
    "title": "My rule",
    "version": "v1.0.0",
    "severity": "HIGH",
    "type": "Some security check",
}

deny[res] {
    	resource := input.document[i].command[name][_]

	resource.Cmd == "run"
	count(resource.Value) == 1
	commands := resource.Value[0]

	commandsSplit = split(commands, "&&")

	some j
	regex.match("apt-get (-(-)?[a-zA-Z]+ *)*install", commandsSplit[j]) == true
	not avoidAdditionalPackages(commandsSplit[j])

	resource := input.document[i].command[name][_]

	resource.Cmd == "run"
	count(resource.Value) > 1

	commands := resource.Value

	commands[_] == "apt-get"
	commands[_] == "install"

	not avoidAdditionalPackages(commands)

    res := {
        "msg": "decision message",
        "id": __rego_metadata__.id,
        "title": __rego_metadata__.title,
        "severity": __rego_metadata__.severity,
        "type": __rego_metadata__.type,
    }
}


avoidAdditionalPackages(cmd) {
	is_string(cmd) == true
	flags := ["--no-install-recommends", "apt::install-recommends=false"]
	contains(cmd, flags[_])
}
avoidAdditionalPackages(cmd) {
	is_array(cmd) == true
    dockerLib.arrayContains(cmd, {"--no-install-recommends", "apt::install-recommends=false"})
}
# vim: ts=4:sw=4:expandtab
