package $namespace.$type.$policyid

__rego_metadata__ := {
    "id": "XYZ-1234",
    "title": "My rule",
    "version": "v1.0.0",
    "severity": "HIGH",
    "type": "Some security check",
}

deny[res] {
    	resource := input.document[i].command[name][_]
	resource.Cmd == "run"
	count(resource.Value) == 1
	command := resource.Value[0]

	isValidUpdate(command)
	not updateFollowedByInstall(command)

    res := {
        "msg": "decision message",
        "id": __rego_metadata__.id,
        "title": __rego_metadata__.title,
        "severity": __rego_metadata__.severity,
        "type": __rego_metadata__.type,
    }
}


isValidUpdate(command) {
	contains(command, " update ")
}
isValidUpdate(command) {
	contains(command, " --update ")
}
isValidUpdate(command) {
	array_split := split(command, " ")

	len = count(array_split)

	update := {"update", "--update"}

	array_split[minus(len, 1)] == update[j]
}
updateFollowedByInstall(command) {
	commandList = [
		"install",
		"source-install",
		"reinstall",
		"groupinstall",
		"localinstall",
		"add",
	]

	update := indexof(command, "update")
	update != -1

	install := indexof(command, commandList[_])
	install != -1

	update < install
}
# vim: ts=4:sw=4:expandtab
