package $namespace.$type.$policyid

__rego_metadata__ := {
    "id": "XYZ-1234",
    "title": "My rule",
    "version": "v1.0.0",
    "severity": "HIGH",
    "type": "Some security check",
}

deny[res] {
    	resource := input.document[i].command[name][_]
	resource.Cmd == "env"
	checkSecret(resource) == true

	resource := input.document[i].command[name][_]
	resource.Cmd == "label"
	checkSecret(resource) == true

	resource := input.document[i].command[name][_]
	resource.Cmd == "run"

	hasSecret(resource)

    res := {
        "msg": "decision message",
        "id": __rego_metadata__.id,
        "title": __rego_metadata__.title,
        "severity": __rego_metadata__.severity,
        "type": __rego_metadata__.type,
    }
}


hasSecret(resource) {
	count(resource.Value) == 1
	contains(resource.Value[0], "--passwordfile")
}
hasSecret(resource) {
	count(resource.Value) > 1
	contains(resource.Value[_], "--passwordfile")
}
checkSecret(cmd) {
	secrets = [
		"passwd",
		"password",
		"pass",
		"admin_password",
		"secret",
		"key",
		"access",
		"api_secret",
		"api_key",
		"apikey",
		"token",
		"tkn",
	]

	value := cmd.Value[j]
	contains(lower(value), secrets[_])

	check(cmd, j)
}
check(resource, j) {
	resource.Cmd == "label"
	j != 0

	resource.Value[minus(j, 1)] != "description"
	resource.Value[minus(j, 1)] != "maintainer"
}
check(resource, j) {
	j == 0
}
# vim: ts=4:sw=4:expandtab
